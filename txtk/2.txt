Írjon C programot, mely a standard bemenetrõl beolvas egy egészekbõl álló végjeles sorozatot,
 melyrõl tudjuk, hogy legkevesebb 1 és legfeljebb 100 adat hosszú lehet.
A végjel a 0 érték.
A program feladata megállapítani, hogy a beérkezett számsorozat szimmetrikus-e.
A sorozat akkor szimmetrikus, ha elölrõl és hátulról sorolva ugyanazokat az elemeket kapjuk.

#include <stdio.h>

int main(void)
{
	int q[100], a, n = 0, i;		
	scanf("%d", &a);                
	while (a != 0) {                
		q[n] = a;                   
		++n;                        
		scanf("%d", &a);            
	}                               
	for (i = 0; i < n/2; ++i) {		
		if (q[i] != q[n-i-1])       
			break;                  
	}                               
	if (i == n/2+1)                 
		printf("Szimmetrikus");     
	else
		printf("Nem is");
	return 0;						
}

/********************************************************************************************/
Írjon C programot, mely a standard bemenetrõl beolvas egy egészekbõl álló végjeles sorozatot,
 melyrõl tudjuk, hogy legkevesebb 1 és legfeljebb 100 adat hosszú lehet.
A végjel a 0 érték.
A végjelet a standard bemeneten egy egész lépésköz (k) követi.
A program feladata összeadni a sorozat minden k-adik elemét (az elsõtõl kezdve), 
majd az eredményt kiírni a standard kimenetre.

#include <stdio.h>
                                       
int main(void)
{                                       
	int q[100], a, n = 0, i, k, sum;
	scanf("%d", &a);                
	while (a != 0) {                
		q[n] = a;                   
		++n;                        
		scanf("%d", &a);            
	}                               
	scanf("%d", &k);                
	sum = 0;                        
	for (i = 0; i < n; i += k)      
		sum += q[i];                
	printf("%d\n", sum);            
	return 0;                       
}                                   
                                    
/********************************************************************************************/
Írjon C programot, mely a standard bemeneten érkezõ, -5 <= n <= 4 egész értékeket tartalmazó
 végjeles sorozatot dolgoz fel.
A sorozat végjele egy olyan adat, mely kilóg az intervallumból.
A program feladata statisztikát adni a beérkezett adatokról a standard kimeneten az alábbi 
formátumban:
-5: 2 db
-4: 24 db
...
4: 12 db
									
#include <stdio.h>

int main(void)
{
	int q[10], a, i;				
	for (i = 0; i < 10; ++i)
		q[i] = 0;					
	scanf("%d", &a);				
	while (a >= -5 && a < 4) {
		q[a+5]++;					
		scanf("%d", &a);
	}
	for (i = -5; i <= 4; ++i)		
		printf("%d: %d db\n", i, q[i+5]);
	return 0;						
}                                       

/********************************************************************************************/
Írjon C programot, mely a standard bemeneten érkezõ, 0 <= n <= 99 egész értékeket tartalmazó végjeles sorozatot dolgoz fel.
A sorozat végjele egy olyan adat, mely kilóg az intervallumból.
A program feladata tízes csoportonként összegezni a beérkezõ adatokat, majd a csoportösszegeket kilistázni az alábbi formában:
0-9: 238 
10-19: 129 
...
90-99: 1287

#include <stdio.h>
                                       
int main(void)
{                                       
	int q[10], a, i;				
	for (i = 0; i < 10; ++i)        
		q[i] = 0;                   
	scanf("%d", &a);                
	while (a >= 0 && a < 100) {     
		q[a/10] += a;               
		scanf("%d", &a);            
	}                               
	for (i = 0; i < 10; ++i)        
		printf("%d-%d: %d\n", 10*i, 10*i+9, q[i]);
	return 0;						
}

/********************************************************************************************/
Írjon C programot, mely egy legfeljebb 100 valós számot tartalmazó végjeles sorozatot olvas be a standard
bemenetrõl, majd a standard kimeneten megadja, hogy hány olyan érték érkezett, mely nagyobb, mint a
sorban tízzel korábban érkezõ érték. A sorozat végjele a 0.0 érték.

#include <stdio.h>

int main(void)
{
	int q[100], i, N = 0, n;	
	double a;                   
	scanf("%lf", &a);           
	while (a != 0.0) {          
		q[N++] = a;             
		scanf("%lf", &a);       
	}                           
	n = 0;                      
	for (i = 10; i < N; ++i)    
		if (q[i] > q[i-10])		
			++n;
	printf("%d", n);
	return 0;					
}
// Ha csak az utolsó 10 elemet tárolja, az is jó természetesen.

/********************************************************************************************/
Írjon C programot, mely egy legfeljebb 200 valós számot tartalmazó végjeles sorozatot olvas be a standard
bemenetrõl, majd a standard kimeneten megadja, hogy hány olyan érték érkezett, mely kisebb, mint a sorban
hússzal késõbb érkezõ érték. A sorozat végjele a 0.0 érték.

#include <stdio.h>
                                       
int main(void)
{                                       
	int q[200], i, N = 0, n;	
	double a;                   
	scanf("%lf", &a);           
	while (a != 0.0) {          
		q[N++] = a;             
		scanf("%lf", &a);       
	}                           
	n = 0;                      
	for (i = 0; i < N-20; ++i)  
		if (q[i] < q[i+20])     
			++n;                
	printf("%d", n);            
	return 0;                   
}
// Ha csak az utolsó 20 elemet tárolja, az is jó természetesen.